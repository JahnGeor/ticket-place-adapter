plugins {
    id 'java'
    id 'application'
    id 'org.springframework.boot' version '3.3.1'
    id 'io.spring.dependency-management' version '1.1.5'
    id 'org.openjfx.javafxplugin' version '0.1.0'
    id 'org.javamodularity.moduleplugin' version '1.8.12'
    id 'org.beryx.runtime' version "1.12.5"
}

group = 'ru.kidesoft'
version = '2.0.0'


application {
    applicationDefaultJvmArgs = ['-Dfile.encoding=UTF8']
    mainClass = 'ru.kidesoft.desktop.DesktopApplication'
}

ext {

    junitVersion = '5.10.0'
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}


javafx {
    version = '17.0.11'
    modules = ['javafx.controls', 'javafx.fxml', 'javafx.web', 'javafx.graphics']
}

repositories {
    mavenCentral()
}

dependencies {
    implementation files('libs/libfptr10.jar')
    implementation 'net.datafaker:datafaker:2.2.2'
    implementation 'org.controlsfx:controlsfx:11.2.1'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-batch'
    testImplementation 'org.springframework.batch:spring-batch-test'
    annotationProcessor 'org.projectlombok:lombok:1.18.30'
    implementation 'io.github.mkpaz:atlantafx-base:2.0.1'
    implementation('org.kordamp.ikonli:ikonli-javafx:12.3.1')
    implementation('org.kordamp.ikonli:ikonli-fontawesome5-pack:12.3.1')
    implementation('org.kordamp.ikonli:ikonli-fluentui-pack:12.3.1')
    implementation('org.kordamp.ikonli:ikonli-materialdesign2-pack:12.3.1')
    implementation 'net.rgielen:javafx-weaver-spring:1.3.0'
    implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    implementation 'org.flywaydb:flyway-core'
    implementation 'org.projectlombok:lombok'
    runtimeOnly 'com.h2database:h2'
    implementation 'org.springframework.boot:spring-boot-starter-log4j2'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

configurations {
    all {
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
    }
}

tasks.named('test') {
    useJUnitPlatform()
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

runtime {
    options = ['--strip-debug', '--no-header-files', '--no-man-pages']

    modules = [
            'javafx.base',
            'javafx.graphics',
            'javafx.controls',
            'javafx.fxml',
            'java.sql',
            'java.desktop',
            'java.logging',
            'java.management',
            'javafx.media',
            'java.compiler',
            'jdk.compiler',
            'jdk.unsupported',
            'java.instrument',
            'java.xml',
            'java.scripting',
            'java.net.http',
            'jdk.jsobject',
            'jdk.xml.dom',
            'java.naming',
            'java.transaction.xa',
            'jdk.crypto.ec'
    ]

    launcher {
        noConsole = true
    }

    jpackage {
        //imageName = "$application.applicationName"
        imageOptions += ['--icon', "src/main/resources/assets/img/icon.ico"]
        //installerName = "$application.applicationName-setup"

        installerOptions += ['--resource-dir', "src/main/resources"]
        installerOptions += ['--vendor', 'Kidesoft']
        installerOptions += ['--win-per-user-install', '--win-dir-chooser', '--win-menu', '--win-shortcut']
    }


    tasks.jpackage.doFirst {
        copy {
            from("${projectDir}/drivers/kkt/atol/10.10.3.0/nt-x64-msvc2015")
            into("$buildDir/jpackage/$application.applicationName/drivers/kkt")
        }
    }
}

tasks.compileJava.doFirst {
    copy {
        from("${projectDir}/drivers/kkt/atol/10.10.3.0/nt-x64-msvc2015")
        into("$buildDir/drivers/kkt")
    }
}

